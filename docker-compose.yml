version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: yelp_postgres
    environment:
      POSTGRES_DB: yelp_sample
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway:
    build: ./services/gateway
    container_name: yelp_gateway
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
    depends_on:
      - business-service
      - review-service

  business-service:
    build: ./services/business
    container_name: yelp_business_service
    ports:
      - "8081:8081"
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: yelp_sample
      DB_PORT: 5432
      PORT: 8081
    depends_on:
      postgres:
        condition: service_healthy

  review-service:
    build: ./services/review
    container_name: yelp_review_service
    ports:
      - "8082:8082"
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: yelp_sample
      DB_PORT: 5432
      PORT: 8082
      LOGGING_SERVICE_URL: http://logging-service:8083
    depends_on:
      postgres:
        condition: service_healthy

  cassandra:
    image: cassandra:4.0
    container_name: yelp_cassandra
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_CLUSTER_NAME: yelp_cluster
      CASSANDRA_DC: datacenter1
      CASSANDRA_RACK: rack1
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 30s

  logging-service:
    build: ./services/logging
    container_name: yelp_logging_service
    ports:
      - "8083:8083"
    environment:
      PORT: 8083
      CASSANDRA_HOSTS: cassandra:9042
    depends_on:
      cassandra:
        condition: service_healthy

volumes:
  postgres_data:
  cassandra_data: